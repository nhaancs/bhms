# Build the Go Binary.
FROM golang:1.21.1 as build_api
ENV CGO_ENABLED 0
ARG BUILD_REF

# Create the service directory and the copy the module files first and then
# download the dependencies. If this doesn't change, we won't need to do this
# again in future builds.
# RUN mkdir /service
# COPY go.* /service/
# WORKDIR /service
# RUN go mod download

# Copy the source code into the container.
COPY . /service

# Build the admin binary.
WORKDIR /service/app/tooling/admin
RUN go build -ldflags "-X main.build=${BUILD_REF}"

# Build the service binary.
WORKDIR /service/app/services/api
RUN go build -ldflags "-X main.build=${BUILD_REF}"


# Run the Go Binary in Alpine.
FROM alpine:3.18
ARG BUILD_DATE
ARG BUILD_REF
RUN addgroup -g 1000 -S g_api && \
    adduser -u 1000 -h /service -G g_api -S u_api
COPY --from=build_api --chown=g_api:u_api /service/zarf/keys/. /service/zarf/keys/.
COPY --from=build_api --chown=g_api:u_api /service/app/tooling/admin/admin /service/admin
COPY --from=build_api --chown=g_api:u_api /service/app/services/api/api /service/api
WORKDIR /service
USER u_api
CMD ["./api"]

LABEL org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.title="api" \
      org.opencontainers.image.authors="Nhan Nguyen <nhanpublic@gmail.com>" \
      org.opencontainers.image.source="https://github.com/nhaancs/bhms/tree/master/app/services/api" \
      org.opencontainers.image.revision="${BUILD_REF}" \
      org.opencontainers.image.vendor="Nhan Nguyen"